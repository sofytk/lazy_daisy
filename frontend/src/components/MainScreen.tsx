import React, { useState, useEffect } from 'react'
import { User } from '../types/game'
import { Leaf, Settings, ShoppingBag, User as UserIcon } from 'lucide-react'
import { tg } from '../telegram'
import './MainScreen.css'

interface MainScreenProps {
  user: User
  onScreenChange: (screen: 'main' | 'shop' | 'profile') => void
  onPayment: (amount: number) => void
}

const MainScreen: React.FC<MainScreenProps> = ({ user, onScreenChange, onPayment }) => {
  const [daisiesLeft, setDaisiesLeft] = useState(2)
  const [isCollecting, setIsCollecting] = useState(false)
  const [floatingTexts, setFloatingTexts] = useState<Array<{id: number, text: string, x: number, y: number}>>([])
  const [petalCount, setPetalCount] = useState(8)

  const handleDaisyClick = () => {
    if (isCollecting) return
    
    setIsCollecting(true)
    setDaisiesLeft(prev => Math.max(0, prev - 1))
    
    // –í–∏–±—Ä–∞—Ü–∏—è
    if (tg?.HapticFeedback) {
      tg.HapticFeedback.impactOccurred('medium')
    }
    
    // –û—Ç—Ä—ã–≤–∞–µ–º –ª–µ–ø–µ—Å—Ç–æ–∫
    setPetalCount(prev => Math.max(0, prev - 1))
    
    // –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π —Ç–µ–∫—Å—Ç
    const texts = user.custom_texts || ['–ª—é–±–∏—Ç', '–Ω–µ –ª—é–±–∏—Ç']
    const randomText = texts[Math.floor(Math.random() * texts.length)]
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≤—ã–ø–ª—ã–≤–∞—é—â–∏–π —Ç–µ–∫—Å—Ç
    const newFloatingText = {
      id: Date.now(),
      text: randomText,
      x: Math.random() * 200 + 50, // –°–ª—É—á–∞–π–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è –≤–æ–∫—Ä—É–≥ —Ä–æ–º–∞—à–∫–∏
      y: Math.random() * 200 + 50
    }
    
    setFloatingTexts(prev => [...prev, newFloatingText])
    
    // –£–±–∏—Ä–∞–µ–º —Ç–µ–∫—Å—Ç —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
    setTimeout(() => {
      setFloatingTexts(prev => prev.filter(t => t.id !== newFloatingText.id))
    }, 2000)
    
    // –ê–Ω–∏–º–∞—Ü–∏—è —Å–±–æ—Ä–∞ —Ä–æ–º–∞—à–∫–∏
    setTimeout(() => {
      setIsCollecting(false)
    }, 1000)
  }

  const handleCustomize = () => {
    onScreenChange('shop')
  }

  const handleBuyDaisies = () => {
    onPayment(50)
  }

  const handleShare = () => {
    const shareText = `–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ –∏–≥—Ä–µ "–†–æ–º–∞—à–∫–∞"! –°–æ–±–∏—Ä–∞–π —Ä–æ–º–∞—à–∫–∏ –∏ –∫–∞—Å—Ç–æ–º–∏–∑–∏—Ä—É–π –∏—Ö!`
    const shareUrl = `https://t.me/your_bot?start=ref${user.id}`
    
    if (navigator.share) {
      navigator.share({
        title: '–ò–≥—Ä–∞ –†–æ–º–∞—à–∫–∞',
        text: shareText,
        url: shareUrl
      })
    } else {
      navigator.clipboard.writeText(`${shareText}\n${shareUrl}`)
      alert('–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!')
    }
  }

  return (
    <div className="main-screen">
      {/* Header */}
      <div className="header">
        <button className="customize-btn" onClick={handleCustomize}>
          <span>‚úèÔ∏è</span>
          –ö–∞—Å—Ç–æ–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å
        </button>
        <div className="balance-badge">
          <Leaf size={16} />
          <span>{user.balance}</span>
        </div>
      </div>

      {/* Main Content */}
      <div className="main-content">
        <div 
          className={`daisy-container ${isCollecting ? 'collecting' : ''}`}
          onClick={handleDaisyClick}
        >
          <div className="daisy">
            <div className="daisy-center"></div>
            <div className="daisy-petals">
              {[...Array(petalCount)].map((_, i) => (
                <div key={i} className={`petal petal-${i + 1}`}></div>
              ))}
            </div>
          </div>
          
          {/* –í—ã–ø–ª—ã–≤–∞—é—â–∏–µ —Ç–µ–∫—Å—Ç—ã */}
          {floatingTexts.map((floatingText) => (
            <div
              key={floatingText.id}
              className="floating-text"
              style={{
                left: `${floatingText.x}px`,
                top: `${floatingText.y}px`
              }}
            >
              {floatingText.text}
            </div>
          ))}
        </div>

        {/* Floating Buttons */}
        <div className="floating-buttons">
          <div className="daisies-left">
            <span>–û—Å—Ç–∞–ª–æ—Å—å {daisiesLeft} —Ä–æ–º–∞—à–∫–∏</span>
          </div>
          
          <div className="action-buttons">
            <button className="share-btn" onClick={handleShare}>
              –ü–æ–¥–µ–ª–∏—Ç—å—Å—è
            </button>
            <button className="buy-btn" onClick={handleBuyDaisies}>
              <Leaf size={16} />
              –ö—É–ø–∏—Ç—å –∑–∞ 50
            </button>
          </div>
        </div>
      </div>

      {/* Bottom Navigation */}
      <div className="bottom-nav">
        <button 
          className={`nav-btn ${true ? 'active' : ''}`}
          onClick={() => onScreenChange('main')}
        >
          <span>üåº</span>
        </button>
        <button 
          className="nav-btn"
          onClick={() => onScreenChange('shop')}
        >
          <ShoppingBag size={20} />
        </button>
        <button 
          className="nav-btn"
          onClick={() => onScreenChange('profile')}
        >
          <UserIcon size={20} />
        </button>
      </div>
    </div>
  )
}

export default MainScreen
